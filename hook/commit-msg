#!/bin/bash
# From Gerrit Code Review 2.16.25
#
# Part of Gerrit Code Review (https://www.gerritcodereview.com/)
#
# Copyright (C) 2009 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# avoid [[ which is not POSIX sh.
if test "$#" != 1 ; then
  echo "$0 requires an argument."
  exit 1
fi

if test ! -f "$1" ; then
  echo "file does not exist: $1"
  exit 1
fi

# add by leon to check commit msg
header_exist=0
description_exist=0
confirm_test_exist=0
root_cause_exist=0
while read line; do
  case "${line}" in
	  [*\]\(*\)*)
		  header_exist=1
		  ;;
	  [description*)
		  if [ ${#line} -lt 16 ];then
                        echo "Abort. description is empty !!!"
                        exit 1
                  fi
		  description_exist=1
                  ;;
	  [confirm\ test*)
                  if [ ${#line} -lt 16 ];then
                        echo "Abort. confirm test is empty !!!"
                        exit 1
                  fi
		  confirm_test_exist=1
                  ;;
	  [root\ cause*)
		  if [ ${#line} -lt 16 ];then
                        echo "Abort. root cause is empty !!!"
                        exit 1
                  fi
		  root_cause_exist=1
                  ;;
	  * );;
  esac
done < $1

if [ ${header_exist} == 0 ] || [ ${description_exist} == 0 ] || [ ${confirm_test_exist} == 0 ] || [ ${root_cause_exist} == 0 ]; then
	echo "Abort. commit msg is incomplete !!!"
	exit 1
fi

# Do not create a change id if requested
if test "false" = "`git config --bool --get gerrit.createChangeId`" ; then
  exit 0
fi

# $RANDOM will be undefined if not using bash, so don't use set -u
random=$( (whoami ; hostname ; date; cat $1 ; echo $RANDOM) | git hash-object --stdin)
dest="$1.tmp.${random}"

trap 'rm -f "${dest}"' EXIT

if ! git stripspace --strip-comments < "$1" > "${dest}" ; then
   echo "cannot strip comments from $1"
   exit 1
fi

if test ! -s "${dest}" ; then
  echo "file is empty: $1"
  exit 1
fi

# Avoid the --in-place option which only appeared in Git 2.8
# Avoid the --if-exists option which only appeared in Git 2.15
if ! git -c trailer.ifexists=doNothing interpret-trailers \
      --trailer "Change-Id: I${random}" < "$1" > "${dest}" ; then
  echo "cannot insert change-id line in $1"
  exit 1
fi

if ! mv "${dest}" "$1" ; then
  echo "cannot mv ${dest} to $1"
  exit 1
fi
